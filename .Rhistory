}
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", name)))
}
}
View(scholar_ids)
scholar_ids %>% filter(is.na(ID))
scholar_ids %>% filter(is.na(ID)) %>% pull(Name)
scholar_ids %>%
filter(is.na(ID)) %>%
filter(stringr::str_detect(Name, "-"))
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
source("~/Documents/GitHub/nserc-pdf/nserc.R", echo=TRUE)
scholar_ids
writexl::write_xlsx(na.omit(scholar_ids), here::here("scholars.xlsx"))
library(dplyr)
library(progress)
# uncomment to parse names
#
# infiles <- list.files(path = here::here(),
#                      pattern = "[0-9].xls.xlsx")
# data <- purrr::map(infiles, ~ mutate(readxl::read_xlsx(here::here(.), skip = 3),
#                                             Filename = .)) %>%
#   bind_rows() %>%
#   mutate(Program = stringr::word(Filename, 1, sep = "_"),
#                 CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
#                 .keep = "unused") %>%
#   select(Program, CompetitionYear, contains("Name")) %>%
#   mutate(FirstName = stringr::word(Name, 2, sep = ", "),
#          LastName = stringr::word(Name, 1, sep = ", ")) %>%
#   rowwise() %>%
#   mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
#                   stringr::str_c(collapse = " "),
#          LastNames = stringr::str_split_1(LastName, "(?=[A-Z])")[-1] %>%
#                   stringr::str_c(collapse = "-")) %>%
#   mutate(ParsedName = stringr::str_c(c(FirstMiddleNames, LastNames), collapse = " ")) %>%
#   ungroup() %>%
#   arrange(desc(CompetitionYear))
# data
# writexl::write_xlsx(data, here::here("parsednames.xlsx"))
data <- readxl::read_xlsx(here::here("parsednames_checked.xlsx"))
names <- data %>% pull(ParsedName)
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
pb <- progress_bar$new(format = ":what [:bar] :percent",
total = length(names))
for (name in names) {
if (name %in% scholar_ids$Name) {
pb$tick(tokens = list(what = paste("skipped", name)))
Sys.sleep(0.001)
next
} else {
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(50:300, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", name)))
}
}
warnings()
scholar_ids
data
data_ids <- full_join(data %>% select(Program, CompetitionYear, ParsedName),
scholar_ids %>% rename(ParsedName = Name))
source("~/Documents/GitHub/nserc-pdf/nserc.R", echo=TRUE)
data %>% select(Program, CompetitionYear, ParsedName)
scholar_ids %>% rename(ParsedName = Name)
View(data_ids)
data_pubs <- data_ids %>%
mutate(ScholarData = list(scholar::get_publications(ScholarID)))
data_pubs <- data_ids %>%
mutate(ScholarData = list(scholar::get_publications(ID)))
data_pubs
View(scholar_ids)
View(data_pubs)
data_pubs <- data_ids %>%
rowwise() %>%
mutate(ScholarData = list(scholar::get_publications(ID)))
View(data_pubs)
View(data_pubs[[5]][[1]])
data <- readxl::read_xlsx(here::here("parsednames_checked.xlsx"))
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
ids <- scholar_ids %>% pull(ID)
ids
ids <- scholar_ids %>% pull(ID) %>% unique()
ids
ids <- scholar_ids %>% pull(ID) %>% unique() %>% na.omit()
ids
ids <- scholar_ids %>%
na.omit() %>%
pull(ID) %>% unique()
ids <- scholar_ids %>%
na.omit() %>%
pull(ID) %>%
unique()
ids
source("~/Documents/GitHub/nserc-pdf/nserc.R", echo=TRUE)
pubs$ID
id %in% pubs$ID
pubs
ids[0]
ids[1]
pubs <- pubs %>%
add_row(ID = "zv2CQ90AAAAJ",
ScholarData = scholar::get_publications("zv2CQ90AAAAJ")) %>%
unest()
pubs <- pubs %>%
add_row(ID = "zv2CQ90AAAAJ",
ScholarData = scholar::get_publications("zv2CQ90AAAAJ")) %>%
unnest()
pubs <- pubs %>%
add_row(ID = "zv2CQ90AAAAJ",
ScholarData = scholar::get_publications("zv2CQ90AAAAJ")) %>%
tidyr::unnest()
pubs
pubs <- pubs %>%
add_row(ID = "zv2CQ90AAAAJ",
ScholarData = scholar::get_publications("zv2CQ90AAAAJ"))
pubs <- tibble::tibble(ID = character(), ScholarData = data.frame())
pubs <- pubs %>%
add_row(ID = "zv2CQ90AAAAJ",
ScholarData = scholar::get_publications("zv2CQ90AAAAJ")) %>%
tidyr::unnest()
pubs <- pubs %>%
add_row(ID = "zv2CQ90AAAAJ",
ScholarData = scholar::get_publications("zv2CQ90AAAAJ")) %>%
tidyr::unnest(cols = "ScholarData")
View(pubs)
writexl::write_xlsx(pubs, here::here("pubs.xlsx"))
pubs <- readxl::read_xlsx(here::here("pubs.xlsx"))
nested_pubs <- tibble::tibble(ID = character(), ScholarData = data.frame())
pubs <- readxl::read_xlsx(here::here("pubs.xlsx"))
nested_pubs <- tibble::tibble(ID = character(), ScholarData = data.frame())
pb <- progress_bar$new(format = ":what [:bar] :percent",
total = length(ids))
for (id in ids) {
if (id %in% pubs$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.001)
next
} else {
nested_pubs <- add_row(ID = id,
ScholarData = scholar::get_publications(id))
pubs <- pubs %>%
bind_rows(nested_pubs %>% tidyr::unnest(cols = "ScholarData"))
time_wait <- sample(50:300, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(pubs, here::here("pubs.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
pubs <- readxl::read_xlsx(here::here("pubs.xlsx"))
pb <- progress_bar$new(format = ":what [:bar] :percent",
total = length(ids))
for (id in ids) {
if (id %in% pubs$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.001)
next
} else {
nested_pubs <- tibble::tibble(ID = id,
ScholarData = scholar::get_publications(id))
pubs <- pubs %>%
bind_rows(nested_pubs %>% tidyr::unnest(cols = "ScholarData"))
time_wait <- sample(50:300, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(pubs, here::here("pubs.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
?scholar::get_profile
temp <- scholar::get_profile(id = "ke2MEF0AAAAJ")
View(temp)
temp
temp <- scholar::get_profile(id = "QugNp3kAAAAJ")$fields
temp
scholar_fields <- tibble::tibble(ID = character(), Fields = character())
for (id in ids[1:3]) {
if (id %in% pubs$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.001)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = scholar::get_profile(id)$fields)
set.seed(as.numeric(Sys.time()))
time_wait <- sample(50:300, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
for (id in ids[1:3]) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.001)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = scholar::get_profile(id)$fields)
set.seed(as.numeric(Sys.time()))
time_wait <- sample(50:300, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
ids <- scholar_ids %>%
na.omit() %>%
pull(ID) %>%
unique()
scholar_fields <- tibble::tibble(ID = character(), Fields = character())
for (id in ids[1:3]) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.001)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(50:300, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_fields <- tibble::tibble(ID = character(), Fields = character())
for (id in ids[1:3]) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.001)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(50:300, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
ids <- scholar_ids %>%
na.omit() %>%
pull(ID) %>%
unique()
scholar_fields <- readxl::read_xlsx(here::here("scholars_fields.xlsx"))
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
ids <- scholar_ids %>%
na.omit() %>%
pull(ID) %>%
unique()
scholar_fields <- readxl::read_xlsx(here::here("scholar_fields.xlsx"))
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.001)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(50:300, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_fields <- readxl::read_xlsx(here::here("scholar_fields.xlsx"))
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.001)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(50:300, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_fields <- readxl::read_xlsx(here::here("scholar_fields.xlsx"))
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.01)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(30:150, 1)/10 # randomized 5 to 30 second wait, worked well so far with not getting blocked
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_fields <- readxl::read_xlsx(here::here("scholar_fields.xlsx"))
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.01)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
# time_wait <- sample(30:50, 1)/10
# Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_fields <- readxl::read_xlsx(here::here("scholar_fields.xlsx"))
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.01)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(10:30, 1)/10
# Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
ids <- scholar_ids %>%
na.omit() %>%
pull(ID) %>%
unique()
scholar_fields <- readxl::read_xlsx(here::here("scholar_fields.xlsx"))
pb <- progress_bar$new(format = ":what [:bar] :percent",
total = length(ids))
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.01)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(10:30, 1)/10
# Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_fields <- readxl::read_xlsx(here::here("scholar_fields.xlsx"))
pb <- progress_bar$new(format = ":what [:bar] :percent",
total = length(ids))
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.01)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(10:30, 1)/10
# Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
scholar_fields <- readxl::read_xlsx(here::here("scholar_fields.xlsx"))
pb <- progress_bar$new(format = ":what [:bar] :percent",
total = length(ids))
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.01)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(10:30, 1)/10
# Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.01)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(10:30, 1)/10
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
pb <- progress_bar$new(format = ":what [:bar] :percent",
total = length(ids))
for (id in ids) {
if (id %in% scholar_fields$ID) {
pb$tick(tokens = list(what = paste("skipped", id)))
Sys.sleep(0.01)
next
} else {
scholar_fields <- scholar_fields %>%
add_row(ID = id,
Fields = stringr::str_c(scholar::get_profile(id)$fields, collapse = " | "))
set.seed(as.numeric(Sys.time()))
time_wait <- sample(10:30, 1)/10
Sys.sleep(time_wait)
if (stringr::str_detect(names(warnings()) %>% tail(n = 1), "code 429")) { # breaks loop if blocked by Google Scholar
break
print(names(warnings()))
}
writexl::write_xlsx(scholar_fields, here::here("scholar_fields.xlsx"))
pb$tick(tokens = list(what = paste("downloaded", id)))
}
}
