dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
mutate(FirstName = stringr::word(2, sep = ","),
LastName = stringr::word(1, sep = ",")) %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])") %>% stirngr::str_c(collapse = "-"))
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(2, sep = ","),
LastName = stringr::word(1, sep = ",")) %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])") %>% stirngr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(2, sep = ","),
LastName = stringr::word(1, sep = ",")) %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])") %>% stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(2, sep = ","),
LastName = stringr::word(1, sep = ",")) %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split(FirstName, "(?=[A-Z])") %>% stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ","),
LastName = stringr::word(Name, 1, sep = ",")) %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split(FirstName, "(?=[A-Z])") %>% stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ","),
LastName = stringr::word(Name, 1, sep = ",")) %>%
rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])") %>% stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ","),
LastName = stringr::word(Name, 1, sep = ",")) %>%
dplyr::rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])") %>% stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ","),
LastName = stringr::word(Name, 1, sep = ",")) %>%
dplyr::rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?<=[A-Z])") %>%
stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ","),
LastName = stringr::word(Name, 1, sep = ",")) %>%
dplyr::rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ", "),
LastName = stringr::word(Name, 1, sep = ", ")) %>%
dplyr::rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])") %>%
stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ", "),
LastName = stringr::word(Name, 1, sep = ", ")) %>%
dplyr::rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ", "),
LastName = stringr::word(Name, 1, sep = ", ")) %>%
dplyr::rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = " "),
LastNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = "-"))
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ", "),
LastName = stringr::word(Name, 1, sep = ", ")) %>%
dplyr::rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = " "),
LastNames = stringr::str_split_1(LastName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = "-"))
data
View(data)
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ", "),
LastName = stringr::word(Name, 1, sep = ", ")) %>%
dplyr::rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = " "),
LastNames = stringr::str_split_1(LastName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = "-")) %>%
arrange(CompetitionYear)
data
data <- purrr::map(infiles, ~ dplyr::mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
dplyr::bind_rows() %>%
dplyr::mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
dplyr::select(Program, CompetitionYear, contains("Name")) %>%
dplyr::mutate(FirstName = stringr::word(Name, 2, sep = ", "),
LastName = stringr::word(Name, 1, sep = ", ")) %>%
dplyr::rowwise() %>%
dplyr::mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = " "),
LastNames = stringr::str_split_1(LastName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = "-")) %>%
dplyr::ungroup() %>%
arrange(CompetitionYear)
data
library(dplyr)
infiles <- list.files(path = here::here(),
pattern = "[0-9].xls.xlsx")
data <- purrr::map(infiles, ~ mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
bind_rows() %>%
mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
select(Program, CompetitionYear, contains("Name")) %>%
mutate(FirstName = stringr::word(Name, 2, sep = ", "),
LastName = stringr::word(Name, 1, sep = ", ")) %>%
rowwise() %>%
mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = " "),
LastNames = stringr::str_split_1(LastName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = "-")) %>%
ungroup() %>%
arrange(CompetitionYear)
data
?arrange
data <- purrr::map(infiles, ~ mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
bind_rows() %>%
mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
select(Program, CompetitionYear, contains("Name")) %>%
mutate(FirstName = stringr::word(Name, 2, sep = ", "),
LastName = stringr::word(Name, 1, sep = ", ")) %>%
rowwise() %>%
mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = " "),
LastNames = stringr::str_split_1(LastName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = "-")) %>%
ungroup() %>%
arrange(desc(CompetitionYear))
data
View(data)
source("~/Documents/GitHub/nserc-pdf/nserc.R", echo=TRUE)
names <- data %>% pull(Name)
names <- names[1:3]
names
scholar_ids <- list()
scholar_ids <- list(scholar_ids,
name = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = ", "),
first_name = stringr::word(name, 2, sep = ", ")))
View(scholar_ids)
scholar_ids
Sys.sleep(3)
scholar_ids <- tibble::tibble(Name = character(), ID = character())
ungroup() %>%
arrange(desc(CompetitionYear))
data <- purrr::map(infiles, ~ mutate(readxl::read_xlsx(here::here(.), skip = 3),
Filename = .)) %>%
bind_rows() %>%
mutate(Program = stringr::word(Filename, 1, sep = "_"),
CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
.keep = "unused") %>%
select(Program, CompetitionYear, contains("Name")) %>%
mutate(FirstName = stringr::word(Name, 2, sep = ", "),
LastName = stringr::word(Name, 1, sep = ", ")) %>%
rowwise() %>%
mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = " "),
LastNames = stringr::str_split_1(LastName, "(?=[A-Z])")[-1] %>%
stringr::str_c(collapse = "-")) %>%
mutate(ParsedName = stringr::str_c(c(FirstMiddleNames, LastNames), collapse = " ")) %>%
ungroup() %>%
arrange(desc(CompetitionYear))
data
names <- data %>% pull(ParsedName)
names <- names[1:3]
names
scholar_ids <- tibble::tibble(Name = character(), ID = character())
scholar_ids <- tibble::tibble(Name = character(), ID = character())
for (name in names) {
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = ", "),
first_name = stringr::word(name, 2, sep = ", "))
)
writexl::write_xlsx(scholars_ids, here::here("scholars.xlsx"))
Sys.sleep(2)
}
for (name in names) {
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " "))
)
writexl::write_xlsx(scholars_ids, here::here("scholars.xlsx"))
Sys.sleep(2)
}
scholar_ids
writexl::write_xlsx(scholars_ids, here::here("scholars.xlsx"))
?writexl::write_xlsx
writexl::write_xlsx(as.data.frame(scholars_ids), here::here("scholars.xlsx"))
scholars_ids
for (name in names) {
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " "))
)
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(2)
}
?scholar::get_scholar_id
existing_scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
?writexl::write_xlsx
source("~/Documents/GitHub/nserc-pdf/nserc.R", echo=TRUE)
existing_scholar_ids
existing_scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
existing_scholar_ids
for (name in names) {
if (name %in% existing_scholar_ids$Name) {
print("Hi")
next
}
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(2)
}
for (name in names) {
if (name %in% existing_scholar_ids$Name) {
print(name, "already downloaded")
next
}
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(2)
}
print(paste(name, "already downloaded"))
for (name in names) {
if (name %in% existing_scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(2)
}
for (name in names) {
if (name %in% existing_scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
print(paste("Downloading", name))
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(2)
}
existing_scholar_ids
names <- data %>% pull(ParsedName)
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
for (name in names) {
if (name %in% existing_scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
print(paste("Downloading", name))
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(2)
}
for (name in names) {
if (name %in% existing_scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
print(paste("Downloading", name))
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(5)
}
for (name in names) {
if (name %in% scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
print(paste("Downloading", name))
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(5)
}
warnings()
writexl::write_xlsx(data, here::here("parsednames.xlsx"))
data <- readxl::read_xlsx(here::here("parsednames_checked.xlsx"))
options(warn=2)
data <- readxl::read_xlsx(here::here("parsednames_checked.xlsx"))
names <- data %>% pull(ParsedName)
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
for (name in names) {
if (name %in% scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
print(paste("Downloading", name))
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(5)
}
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
data <- readxl::read_xlsx(here::here("parsednames_checked.xlsx"))
names <- data %>% pull(ParsedName)
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
for (name in names) {
if (name %in% scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
print(paste("Downloading", name))
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(10)
}
data <- readxl::read_xlsx(here::here("parsednames_checked.xlsx"))
names <- data %>% pull(ParsedName)
library(dplyr)
library(dplyr)
infiles <- list.files(path = here::here(),
pattern = "[0-9].xls.xlsx")
# data <- purrr::map(infiles, ~ mutate(readxl::read_xlsx(here::here(.), skip = 3),
#                                             Filename = .)) %>%
#   bind_rows() %>%
#   mutate(Program = stringr::word(Filename, 1, sep = "_"),
#                 CompetitionYear = stringr::word(`Fiscal Year`, 1, sep = "-"),
#                 .keep = "unused") %>%
#   select(Program, CompetitionYear, contains("Name")) %>%
#   mutate(FirstName = stringr::word(Name, 2, sep = ", "),
#          LastName = stringr::word(Name, 1, sep = ", ")) %>%
#   rowwise() %>%
#   mutate(FirstMiddleNames = stringr::str_split_1(FirstName, "(?=[A-Z])")[-1] %>%
#                   stringr::str_c(collapse = " "),
#          LastNames = stringr::str_split_1(LastName, "(?=[A-Z])")[-1] %>%
#                   stringr::str_c(collapse = "-")) %>%
#   mutate(ParsedName = stringr::str_c(c(FirstMiddleNames, LastNames), collapse = " ")) %>%
#   ungroup() %>%
#   arrange(desc(CompetitionYear))
# data
# writexl::write_xlsx(data, here::here("parsednames.xlsx"))
data <- readxl::read_xlsx(here::here("parsednames_checked.xlsx"))
names <- data %>% pull(ParsedName)
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
for (name in names) {
if (name %in% scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
print(paste("Downloading", name))
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(10)
}
names <- data %>% pull(ParsedName)
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
for (name in names) {
if (name %in% scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
print(paste("Downloading", name))
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(10)
}
data <- readxl::read_xlsx(here::here("parsednames_checked.xlsx"))
names <- data %>% pull(ParsedName)
scholar_ids <- readxl::read_xlsx(here::here("scholars.xlsx"))
for (name in names) {
if (name %in% scholar_ids$Name) {
print(paste(name, "already downloaded"))
next
}
print(paste("Downloading", name))
scholar_ids <- scholar_ids %>%
add_row(Name = name,
ID = scholar::get_scholar_id(last_name = stringr::word(name, 1, sep = " "),
first_name = stringr::word(name, 2, sep = " ")))
writexl::write_xlsx(scholar_ids, here::here("scholars.xlsx"))
Sys.sleep(10) # stops getting blocked by Google Scholar
}
warnings()
